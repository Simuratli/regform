{"version":3,"sources":["config/authentication.js","components/ScrollToTop/ScrollToTop.js","index.js","b2c/b2c.js","b2c/auth-utils.js"],"names":["redirectUri","authentication","initialize","instance","tenant","signInPolicy","forgetPasswordPolicy","clientId","cacheLocation","scopes","postLogoutRedirectUri","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","initializeApp","App","store","Webfont","load","custom","families","history","createBrowserHistory","ReactDOM","render","document","getElementById","run","a","console","log","default","msalApp","B2C_SCOPES","API_ACCESS","msalAppConfig","auth","authority","validateAuthority","cache","storeAuthStateInCookie","ua","navigator","userAgent","msie","indexOf","msie11","isIE","state","stopLoopingRedirect","config","launchApp","accessToken","msalObj","tenantSubdomain","split","initializeConfig","msal","successCallback","handleRedirectCallback","error","getAccount","acquireTokenSilent","then","localStorage","setItem","sessionStorage","acquireTokenRedirect","loginRedirect","required","WrappedComponent","renderLoading","props","signedIn","this","React","Component","signOut","logout","getAccessToken"],"mappings":"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","file":"static/js/main.7570c149.chunk.js","sourcesContent":["import authentication from '../b2c';\n\nconst redirectUri = process.env.NODE_ENV === 'production'\n    ? `https://my-uds-systems-website-development.azurewebsites.net`\n    : 'http://localhost:6420'\n\n// const redirectUri = process.env.NODE_ENV === 'production'\n//     ? `https://my.uds.systems`\n//     : 'http://localhost:6420'\n\nauthentication.initialize({\n    instance: 'https://udscustomersdirectory.b2clogin.com/tfp/',\n    tenant: 'udscustomersdirectory.onmicrosoft.com',\n    signInPolicy: 'B2C_1_SignUp_SignIn',\n    forgetPasswordPolicy: 'B2C_1_PasswordReset',\n    clientId: 'dd6f04a9-3f48-418c-bd64-76b3465b4ef6',\n    cacheLocation: 'localStorage',\n    scopes: [\n        'https://udscustomersdirectory.onmicrosoft.com/uds-portal/prod/user_impersonation',\n        'https://udscustomersdirectory.onmicrosoft.com/uds-portal/prod/write',\n        'https://udscustomersdirectory.onmicrosoft.com/uds-portal/prod/read'\n    ],\n    redirectUri,\n    postLogoutRedirectUri: redirectUri\n});\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}\n","import React from \"react\";\nimport \"./index.css\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./css/index.css\";\nimport Webfont from \"webfontloader\";\n\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport \"./config/authentication\";\nimport \"./assets/fonts/fonts.css\";\nimport authentication from \"./b2c\";\nimport ScrollToTop from \"./components/ScrollToTop/ScrollToTop\";\n\nfunction initializeApp(App, store) {\n  Webfont.load({\n    custom: {\n      families: [\"SegoeUI\", \"Gilroy\"],\n    },\n  });\n\n  const history = createBrowserHistory();\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter history={history}>\n        <ScrollToTop />\n        <App />\n      </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n}\n\nauthentication.run(async () => {\n  const App = await import(\"./App\");\n\n  const store = await import(\"./store\");\n\n  console.log(App);\n  initializeApp(App.default, store.default);\n});\n","// note on window.msal usage. There is little point holding the object constructed by new Msal.UserAgentApplication\n// as the constructor for this class will make callbacks to the acquireToken function and these occur before\n// any local assignment can take place. Not nice but its how it works.\nimport * as msal from 'msal'\nimport React from 'react'\nimport { initializeConfig, msalAppConfig, B2C_SCOPES } from \"./auth-utils\"\n\nconst LOCAL_STORAGE = 'localStorage'\n// const SESSION_STORAGE = 'sessionStorage'\nconst AUTHORIZATION_KEY = 'Authorization'\n\nconst state = {\n  stopLoopingRedirect: false,\n  config: {\n    scopes: [],\n    cacheLocation: null,\n  },\n  launchApp: null,\n  accessToken: null,\n  msalObj: null,\n}\n\nlet msalApp;\n\nfunction acquireToken(successCallback) {\n  const account = msalApp.getAccount();\n  if (!account) {\n    msalApp.loginRedirect(B2C_SCOPES.API_ACCESS)\n  } else {\n    msalApp.acquireTokenSilent(B2C_SCOPES.API_ACCESS).then(accessToken => {\n      if (msalAppConfig.cache.cacheLocation === LOCAL_STORAGE) {\n        window.localStorage.setItem(AUTHORIZATION_KEY, 'Bearer ' + accessToken)\n      } else {\n        window.sessionStorage.setItem(AUTHORIZATION_KEY, 'Bearer ' + accessToken)\n      }\n\n      state.accessToken = accessToken\n\n      // TODO: Remove later\n      if(process.env.NODE_ENV !== 'production')\n          console.log(accessToken);\n\n      if (state.launchApp) {\n        state.launchApp()\n      }\n      if (successCallback) {\n        successCallback()\n      }\n    }, error => {\n      if (error) {\n        msalApp.acquireTokenRedirect(B2C_SCOPES.API_ACCESS)\n      }\n    })\n  }\n}\n\nconst authentication = {\n  initialize: (config) => {\n    initializeConfig(config)\n    msalApp = new msal.UserAgentApplication(msalAppConfig)\n  },\n  run: (launchApp) => {\n    state.launchApp = launchApp\n    msalApp.handleRedirectCallback(error => {\n      if (error) {\n        // const errorMessage = error.errorMessage ? error.errorMessage : \"Unable to acquire access token.\"\n      }\n    })\n    acquireToken()\n  },\n  required: (WrappedComponent, renderLoading) => {\n    return class extends React.Component {\n      constructor(props) {\n        super(props)\n        this.state = {\n          signedIn: false,\n          error: null\n        }\n      }\n\n      render() {\n        if (this.state.signedIn) {\n          return (<WrappedComponent {...this.props} />)\n        }\n        return typeof renderLoading === 'function' ? renderLoading() : null\n      }\n    }\n  },\n  signOut: () => msalApp.logout(),\n  getAccessToken: () => state.accessToken\n}\n\nexport default authentication\n","export const requiresInteraction = errorMessage => {\n  if (!errorMessage || !errorMessage.length) {\n    return false;\n  }\n\n  return (\n    errorMessage.indexOf(\"consent_required\") > -1 ||\n    errorMessage.indexOf(\"interaction_required\") > -1 ||\n    errorMessage.indexOf(\"login_required\") > -1\n  );\n};\n\nexport const isIE = () => {\n  const ua = window.navigator.userAgent;\n  const msie = ua.indexOf(\"MSIE \") > -1;\n  const msie11 = ua.indexOf(\"Trident/\") > -1;\n\n  // If you as a developer are testing using Edge InPrivate mode, please add \"isEdge\" to the if check\n  // const isEdge = ua.indexOf(\"Edge/\") > -1;\n\n  return msie || msie11;\n};\n\nexport const initializeConfig = (config) => {\n  const tenantSubdomain = config.tenant.split('.')[0]\n  const instance = `https://${tenantSubdomain}.b2clogin.com/`\n  const authority = `${instance}${config.tenant}/${config.signInPolicy}`\n\n  msalAppConfig.auth.clientId = config.clientId\n  msalAppConfig.auth.authority = authority\n  msalAppConfig.auth.redirectUri = config.redirectUri\n  msalAppConfig.auth.postLogoutRedirectUri = config.postLogoutRedirectUri\n  msalAppConfig.cache.cacheLocation = config.cacheLocation\n\n  B2C_SCOPES.API_ACCESS.scopes = config.scopes\n};\n\nexport const B2C_SCOPES = {\n  API_ACCESS: {\n    scopes: []\n  }\n};\n\nexport const msalAppConfig = {\n  auth: {\n    clientId: \"\",\n    authority: \"\",\n    redirectUri: \"\",\n    validateAuthority: false,\n    postLogoutRedirectUri: \"\"\n  },\n  cache: {\n    cacheLocation: \"\",\n    storeAuthStateInCookie: isIE()\n  }\n};"],"sourceRoot":""}